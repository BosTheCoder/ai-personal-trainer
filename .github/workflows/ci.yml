name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Lint frontend
      run: |
        cd frontend
        npm run lint

    - name: Build frontend
      run: |
        cd frontend
        npm run build

  backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: backend/.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install backend dependencies
      run: |
        cd backend
        poetry install --no-interaction --no-ansi --no-root

    - name: Run pre-commit hooks
      run: |
        cd backend
        poetry run pre-commit run --all-files

    - name: Run tests
      run: |
        cd backend
        poetry run pytest

  docker:
    runs-on: ubuntu-latest
    needs: [frontend, backend]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build and start services
      run: |
        docker-compose up --build -d

    - name: Wait for services to be healthy
      run: |
        echo "Waiting for services to be healthy..."
        timeout 300 bash -c 'until docker-compose ps | grep -q "healthy"; do sleep 5; done'

    - name: Verify frontend health
      run: |
        curl -f http://localhost:3000 || exit 1

    - name: Verify backend health
      run: |
        curl -f http://localhost:8000/health || exit 1

    - name: Show service logs on failure
      if: failure()
      run: |
        docker-compose logs

    - name: Cleanup
      if: always()
      run: |
        docker-compose down -v
