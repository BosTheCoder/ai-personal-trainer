version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - ai-trainer-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - ai-trainer-network
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: alpine:latest
    command: sh -c "apk add --no-cache sqlite && mkdir -p /data && touch /data/database.db && tail -f /dev/null"
    volumes:
      - sqlite_data:/data
    networks:
      - ai-trainer-network
    healthcheck:
      test: ["CMD", "test", "-f", "/data/database.db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  sqlite_data:

networks:
  ai-trainer-network:
    driver: bridge
